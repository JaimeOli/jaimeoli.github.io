{"version":3,"sources":["logo.svg","Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,I,YCETA,EAAc,WAChB,OACI,gCACI,+BACI,sCAGA,2CAQVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACtC,OACI,+BACI,6BACKD,EAAIE,OAET,6BACKF,EAAIG,MAET,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBARCA,MAcjB,OACI,gCACKJ,KAiBES,EAZD,SAACV,GACX,IAAOE,EAAiCF,EAAjCE,cAAcO,EAAmBT,EAAnBS,gBAErB,OACI,kCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OC7C5DE,E,4MACFC,aAAe,CACXN,KAAK,GACLC,IAAI,I,EAGRM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAqBA,EAAMC,OAApBV,EAAP,EAAOA,KAAKW,EAAZ,EAAYA,MAEZ,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WACI,MAAkBS,KAAKR,MAAhBP,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,IACZ,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eACrE,uBAAOQ,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAClE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA7B/CO,aAmCJf,IC9BTgB,E,4MACJd,MAAQ,CACNe,WAAY,CAAC,CACXtB,KAAK,UACLC,IAAI,WACN,CACED,KAAK,MACLC,IAAI,WACN,CACED,KAAK,MACLC,IAAI,oBACN,CACED,KAAK,SACLC,IAAI,e,EAIRE,gBAAkB,SAACJ,GACjB,IAAOuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAUC,GACvC,OAAOA,IAAM1B,Q,EAKnBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CACZU,WAAW,GAAD,mBAAK,EAAKf,MAAMe,YAAhB,CAA4BE,O,4CAI1C,WACE,IAAOF,EAAcP,KAAKR,MAAnBe,WAEP,OACE,sBAAKI,UAAU,YAAf,UACA,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAvCbM,aA6CHC,ICxCAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51ce581d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\";\r\n\r\nconst TableHeader = () => {\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    Name\r\n                </th>\r\n                <th>\r\n                    Job\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row,index) =>{\r\n        return(\r\n            <tr key={index}>\r\n                <td>\r\n                    {row.name}\r\n                </td>\r\n                <td>\r\n                    {row.job}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <tbody>\r\n            {rows}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nconst Table = (props) =>{\r\n    const {characterData,removeCharacter} = props\r\n\r\n    return(\r\n        <table>\r\n        <TableHeader></TableHeader>\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}></TableBody>\r\n        </table>\r\n    )\r\n\r\n}\r\n\r\nexport default Table","import React,{Component} from \"react\";\r\n\r\nclass Form extends Component{\r\n    initialState = {\r\n        name:'',\r\n        job:''\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name,value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {    \r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render(){\r\n        const {name,job} =this.state;\r\n        return(        \r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange}></input>\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange}></input>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table';\nimport { render } from 'react-dom';\nimport React,{ Component } from 'react';\nimport Form from './Form';\n\nclass App extends Component {\n  state = {\n    characters: [{\n      name:'Charlie',\n      job:'Janitor'\n  },{\n      name:'Mac',\n      job:'Bouncer'\n  },{\n      name:'Dee',\n      job:'Aspiring actress'\n  },{\n      name:'Dennis',\n      job:'Bartender'\n  }],\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n  \n    this.setState({\n      characters: characters.filter((character,i) => {\n        return i !== index\n      })\n    })\n  }\n  \n  handleSubmit = (character) =>{\n    this.setState({\n      characters:[...this.state.characters, character]\n    })\n  }\n\n  render(){\n    const {characters} = this.state\n\n    return(\n      <div className=\"container\">\n      <Table characterData={characters} removeCharacter={this.removeCharacter} />\n      <Form handleSubmit={this.handleSubmit}></Form>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}